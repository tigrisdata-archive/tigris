name: publish docker image

on:
  pull_request:
  push:
    branches:
      - main
      - alpha
  release:
    types: [published]
  workflow_call:
    secrets:
      GH_ECR_AWS_ACCESS_KEY_ID:
        required: true
      GH_ECR_AWS_SECRET_ACCESS_KEY:
        required: true
      GH_DOCKER_ACCESS_USER:
        required: true
      GH_DOCKER_ACCESS_TOKEN:
        required: true

env:
  AWS_REGION: "us-west-2"
  ECR_REPOSITORY: "prod/tigris"
  DOCKER_REPOSITORY: "tigrisdata/tigris"

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.GH_ECR_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.GH_ECR_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Docker Hub
        id: login-docker-hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.GH_DOCKER_ACCESS_USER }}
          password: ${{ secrets.GH_DOCKER_ACCESS_TOKEN }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Docker meta
        id: meta
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}
            ${{ env.DOCKER_REPOSITORY }}
          # generate Docker tags based on the following events/attributes
          # we generate the latest tag off the alpha branch
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/alpha' }}

      - name: Pull submodules
        run: git submodule update --init --recursive

      - name: Build and push Docker images
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
