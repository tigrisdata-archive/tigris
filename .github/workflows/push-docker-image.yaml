name: docker image

on:
  workflow_call:
    inputs:
      docker_repository:
        type: string
      quay_repository:
        type: string
      platforms:
        type: string
      file:
        type: string
      event_name:
        type: string
      build_args:
        type: string

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Fetch tags
        run: |
          git fetch --prune --unshallow --tags

      - name: Login to Docker Hub
        id: login-docker-hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.GH_DOCKER_ACCESS_USER }}
          password: ${{ secrets.GH_DOCKER_ACCESS_TOKEN }}

      - name: Login to Quay.io
        if: ${{ inputs.quay_repository != '' }}
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_REGISTRY_USER }}
          password: ${{ secrets.QUAY_REGISTRY_PASSWORD }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ inputs.docker_repository }}
            ${{ inputs.quay_repository }}
          # generate Docker tags based on the following events/attributes
          # we generate the latest tag off the beta branch
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable=${{ inputs.event_name == 'release' }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ inputs.file }}
          platforms: ${{ inputs.platforms }}
          push: ${{ inputs.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: ${{ inputs.build_args }}
