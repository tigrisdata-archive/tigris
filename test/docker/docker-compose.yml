# Copyright 2022 Tigris Data, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: '3.3'

services:
  tigris_db:
    container_name: tigris_db
    image: tigrisdata/foundationdb:7.1.7
    volumes:
      - type: volume
        source: dbdata
        target: /var/lib/foundationdb/

  # FDB container with FDB server bound to localhost
  # This is needed to be able to connect to FDB from the host
  # Used in local_run make file target
  tigris_db2:
    container_name: tigris_db2
    image: tigrisdata/foundationdb:7.1.7
    environment:
      - FDB_NETWORKING_MODE=host
    ports:
      - "4500:4500"


  tigris_search:
    container_name: tigris_search
    image: typesense/typesense:0.23.0
    environment:
      - TYPESENSE_DATA_DIR=/tmp
      - TYPESENSE_API_KEY=ts_test_key
    ports:
      - "8108:8108"

  tigris_server:
    container_name: tigris_server
    image: tigris_server
    environment:
      - TIGRIS_ENVIRONMENT=test
      - TIGRIS_SERVER_SEARCH_AUTH_KEY=ts_test_key
      - TIGRIS_SERVER_SEARCH_HOST=tigris_search
      - TIGRIS_SERVER_LOG_FORMAT=console
      - TIGRIS_SERVER_CDC_ENABLED=true
    build:
      context: ../../
      dockerfile: docker/Dockerfile
    volumes:
      - type: volume
        source: dbdata
        target: /etc/foundationdb/
    ports:
      - "8081:8081"
    command: >
      bash -c '[ ! -f /etc/foundationdb/initialized ] && fdbcli --exec "configure new single memory" && touch /etc/foundationdb/initialized;
        /server/service'
    depends_on:
      - tigris_db
      - tigris_search

  tigris_server2:
    container_name: tigris_server2
    image: tigris_server
    environment:
      - TIGRIS_ENVIRONMENT=test
      - TIGRIS_SERVER_SEARCH_AUTH_KEY=ts_test_key
      - TIGRIS_SERVER_SEARCH_HOST=tigris_search
      - TIGRIS_SERVER_LOG_FORMAT=console
      - TIGRIS_SERVER_CDC_ENABLED=true
    build:
      context: ../../
      dockerfile: docker/Dockerfile
    volumes:
      - type: volume
        source: dbdata
        target: /etc/foundationdb/
    ports:
      - "8082:8081"
    command: >
      bash -c '/server/service'
    depends_on:
      - tigris_server
      - tigris_db2

  tigris_test:
    container_name: tigris_test
    image: tigris_test
    environment:
      # Instruct test to use default location in the docker
      # instead of test/config/fdb.cluster file when running on the host
      - TIGRIS_ENVIRONMENT=test
      - TEST_PARAM
    build:
      context: ../../
      dockerfile: test/docker/Dockerfile
    volumes:
      - type: bind
        source: ../../
        target: /go/src/tigris
      - type: volume
        source: dbdata
        target: /etc/foundationdb/
      - type: volume
        source: go_test_cache
        target: /root/.cache/go-build
    depends_on:
      - tigris_server2

  tigris_prometheus:
    container_name: tigris_prometheus
    image: prom/prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - tigris_server

  tigris_grafana:
    container_name: tigris_grafana
    image: grafana/grafana
    ports:
      - "3000:3000"
    depends_on:
      - tigris_prometheus
      - tigris_server

volumes:
  dbdata:
  go_test_cache:
