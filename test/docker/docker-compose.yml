# Copyright 2022-2023 Tigris Data, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: "3.3"

services:
  tigris_db:
    container_name: tigris_db
    image: tigrisdata/foundationdb:7.1.7
    volumes:
      - type: volume
        source: dbdata
        target: /var/lib/foundationdb/

  # FDB container with FDB server bound to localhost
  # This is needed to be able to connect to FDB from the host
  # Used in local_run make file target
  tigris_db2:
    container_name: tigris_db2
    image: tigrisdata/foundationdb:7.1.7
    environment:
      - FDB_NETWORKING_MODE=host
    ports:
      - "4500:4500"

  tigris_search:
    container_name: tigris_search
    image: typesense/typesense:0.24.0
    environment:
      - TYPESENSE_DATA_DIR=/tmp
      - TYPESENSE_API_KEY=ts_test_key
    ports:
      - "8108:8108"

  tigris_cache:
    container_name: tigris_cache
    image: eqalpha/keydb:latest
    ports:
      - "6379:6379"

  tigris_server:
    container_name: tigris_server
    image: tigris_server
    environment:
      - TIGRIS_ENVIRONMENT=test
      - TIGRIS_SERVER_CACHE_HOST=tigris_cache
      - TIGRIS_SERVER_LOG_FORMAT=console
      - TIGRIS_AUTH_ENABLED=false
      - TIGRIS_SERVER_SEARCH_AUTH_KEY=ts_test_key
      - TIGRIS_SERVER_SEARCH_HOST=tigris_search
      - TIGRIS_SERVER_TRACING_ENABLED=true
      - TIGRIS_SERVER_SEARCH_READ_ENABLED=true
      - TIGRIS_SERVER_SECONDARY_INDEX_WRITE_ENABLED=true
      - TIGRIS_SERVER_SECONDARY_INDEX_READ_ENABLED=true
      - TIGRIS_SERVER_SECONDARY_INDEX_MUTATE_ENABLED=true
      - TIGRIS_SERVER_WORKERS_ENABLED=true
      - GOCOVERDIR=/tmp/tigris_coverdata
    build:
      context: ../../
      dockerfile: docker/Dockerfile
      args:
        - BUILD_PARAM_ARG="-cover"
    volumes:
      - type: volume
        source: dbdata
        target: /etc/foundationdb/
      - type: bind
        source: /tmp/tigris_coverdata
        target: /tmp/tigris_coverdata
    ports:
      - "8081:8081"
    command: >
      bash -c '[ ! -f /etc/foundationdb/initialized ] && fdbcli --exec "configure new single memory" && touch /etc/foundationdb/initialized;
        /server/service'
    depends_on:
      - tigris_db
      - tigris_search
      - tigris_cache

  tigris_server2:
    container_name: tigris_server2
    image: tigris_server2
    environment:
      - TIGRIS_CONFIG_FILE=/etc/tigrisdata/tigris/server.test.yaml
      - TIGRIS_SERVER_AUTH_GOTRUE_SHARED_SECRET=test_shared_secret
      - GOCOVERDIR=/tmp/tigris_coverdata
    build:
      context: ../../
      dockerfile: docker/Dockerfile
      args:
        - BUILD_PARAM_ARG="-cover"
        - BUILD_PROFILE=.test
    volumes:
      - type: volume
        source: dbdata
        target: /etc/foundationdb/
      - type: bind
        source: /tmp/tigris_coverdata2
        target: /tmp/tigris_coverdata
    ports:
      - "8082:8081"
    command: >
      bash -c 'sleep 5; /server/service'
    depends_on:
      - tigris_server
      - tigris_db2
      - tigris_realtime
      - tigris_gotrue
      - tigris_search

  tigris_realtime:
    container_name: tigris_realtime
    image: tigris_server
    environment:
      - TIGRIS_SERVER_SERVER_TYPE=realtime
      - TIGRIS_ENVIRONMENT=test
      - TIGRIS_SERVER_SEARCH_AUTH_KEY=ts_test_key
      - TIGRIS_SERVER_SEARCH_HOST=tigris_search
      - TIGRIS_SERVER_CACHE_HOST=tigris_cache
      - TIGRIS_SERVER_LOG_FORMAT=console
    build:
      context: ../../
      dockerfile: docker/Dockerfile
      args:
        - BUILD_PARAM_ARG="-cover"
    volumes:
      - type: volume
        source: dbdata
        target: /etc/foundationdb/
    ports:
      - "8083:8083"
    command: >
      bash -c '/server/service'
    depends_on:
      - tigris_server

  tigris_test:
    container_name: tigris_test
    image: tigris_test
    environment:
      # Instruct test to use default location in the docker
      # instead of test/config/fdb.cluster file when running on the host
      - TIGRIS_ENVIRONMENT=test
      - TEST_PARAM
      - TEST_AUTH_TOKEN=eyJhbGciOiJSUzI1NiIsImtpZCI6IklhVk5FXzFVb01oQXRnQlo4cmFQdkR1RVJXMzd1dWVNU1VFUExENmx3NjAiLCJ0eXAiOiJKV1QifQ.eyJhdWQiOiJodHRwczovL3RpZ3Jpcy10ZXN0IiwiZXhwIjoxOTkyOTU4MjI5LCJpYXQiOjE2Nzc1OTgyMjksImlzcyI6Imh0dHA6Ly90aWdyaXNfZ290cnVlOjgwODYiLCJzdWIiOiJndHw1ZjY4MTJlNC02ZjRiLTQ0ZDUtYmMwNi01ZWJlMzNlOTM2ZWMiLCJodHRwczovL3RpZ3JpcyI6eyJuYyI6InRpZ3Jpc190ZXN0IiwicCI6IiJ9LCJhcHBfbWV0YWRhdGEiOm51bGwsInVzZXJfbWV0YWRhdGEiOm51bGx9.FdZLROcQH4L0B02Ef4HY7IPxWt7CbcwCYc1zfC2oSwLbo4K60NJ7IdIiESfxMkJ31i0oeYzHgNJ6kSsYcwS-NYZhxFn9JY6CztXZsmRTs5RfgRp5TlYn06NPMQ4MOVmgdjGINMsSIaw11V7dZjI1MOOW8OXxfGR4TLaeenxn54SrVsg4itcMZVKM2xAtwBBs-OoocqLVPO_CM3Czb7HyZIeUver7-I6A-lcKio3y0Va7nrZIkblrXgCMCaG9-p8wYKgGV8Tc1Yi_TV8tdCj752pLLuOKB4-Zp6vxCMmfegvlw1V2OQikppO0Rk_W6BYTfprlKtoMkNU4O7TAXL732b6WghAALEIP9gxcpNE2gl3aE22fXrZ2uQHZYOmJa9KBHZT-UTPtgxXLztM_o5avtu1pO5v__vdQ-TuRmWsyUJce0R5iNHawItCQloueCrjwBkdSMexhk53xiHg9BB6gPXi2G5Wa1lLd_3Zvss32CnPuNRW3ks_MdQ-V6MwoGRjFSDo97212T06FgZus2w2SEpsh9ijmLW0tPs6O4AlpqlQGbl7Fie5p9ZMKkT2x5g_2R5dRaTOertSRVfPQfWk_P_SjCTsvZURYPPvZiwuesxoiETc621m4xFjwOKhHD2t_1eh8S7ubjta5kDX6hmjJRiFN6vr0BBtNGgh7DdnAHeg
      - GOFLAGS=-buildvcs=false #FIXME: Added for golangci-lint to work in Github actions
    build:
      context: ../../
      dockerfile: test/docker/Dockerfile
    volumes:
      - type: bind
        source: ../../
        target: /go/src/tigris
      - type: volume
        source: dbdata
        target: /etc/foundationdb/
      - type: volume
        source: go_test_cache
        target: /root/.cache/go-build
    depends_on:
      - tigris_server2

  tigris_victoriametrics:
    container_name: tigris_victoriametrics
    image: victoriametrics/victoria-metrics
    ports:
      - "8428:8428"
    depends_on:
      - tigris_server

  tigris_vmagent:
    container_name: tigris_vmagent
    image: victoriametrics/vmagent
    ports:
      - "8429:8429"
    volumes:
      - ./victoriametrics/vmagent.yml:/etc/victoriametrics/vmagent.yml
    command:
      - "-promscrape.config=/etc/victoriametrics/vmagent.yml"
      - "-promscrape.config.strictParse=false"
      - "-remoteWrite.url=http://tigris_victoriametrics:8428/api/v1/write"
    depends_on:
      - tigris_victoriametrics

  tigris_grafana:
    container_name: tigris_grafana
    image: grafana/grafana
    ports:
      - "3000:3000"
    depends_on:
      - tigris_victoriametrics
      - tigris_vmagent
      - tigris_server

  tigris_jaeger:
    container_name: tigris_jaeger
    image: jaegertracing/all-in-one
    ports:
      - "14268:14268"
      - "16686:16686"
    depends_on:
      - tigris_server

  tigris_gotrue:
    container_name: tigris_gotrue
    image: tigrisdata/gotrue
    environment:
      - GOTRUE_SECRET=gotrue_test_secret
      - PORT=8086
      - GOTRUE_MAILER_AUTOCONFIRM=true
      - GOTRUE_DB_PROJECT=tigris_test_with_auth
      - GOTRUE_DB_URL=http://tigris_server:8081
      - GOTRUE_SITE_URL=http://tigris_gotrue:8086
      - GOTRUE_JWT_ALGORITHM=RS256
      - GOTRUE_JWT_RSA_PRIVATE_KEY=/home/netlify/keys/jwt.test.key
      - GOTRUE_JWT_RSA_PUBLIC_KEYS=/home/netlify/keys/jwt.test.key.pub
      - GOTRUE_DISABLE_SIGNUP=false
      - GOTRUE_JWT_EXP=300
      - GOTRUE_JWT_ISSUER=http://tigris_gotrue:8086
      - GOTRUE_DB_BRANCH=main
      - GOTRUE_DB_ENCRYPTION_KEY=test_encryption_key_____________
      - GOTRUE_OPERATOR_TOKEN=test_token
      - GOTRUE_JWT_SECRET=test_secret
      - JWT_DEFAULT_GROUP_NAME=user
      - CREATE_SUPER_ADMIN_USER=true
      - GOTRUE_INSTANCE_ID=00000000-0000-0000-0000-000000000000
      - GOTRUE_SUPERADMIN_AUD=https://tigris-test
      - GOTRUE_SUPERADMIN_USERNAME=test
      - GOTRUE_SUPERADMIN_PASSWORD=test
    ports:
      - "8086:8086"
    depends_on:
      - tigris_server

volumes:
  dbdata:
  go_test_cache:
